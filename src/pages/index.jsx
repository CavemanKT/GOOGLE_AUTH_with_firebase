import Head from 'next/head'
import Image from 'next/image'
import Button from 'react-bootstrap/Button'
import { LockClosedIcon } from '@heroicons/react/solid'
import { Helmet } from 'react-helmet'
import React, { useState, useEffect } from 'react'
import ReactPlayer from 'react-player/youtube'

import AOS from 'aos'
import styles from '../styles/Home.module.css'
import 'aos/dist/aos.css'

import useAuth from '../actions/auth'
import useChannel from '../actions/channel'

const YOUTUBE_PLAYLIST_ITEMS_API = 'https://www.googleapis.com/youtube/v3/playlistItems'
const YOUTUBE_PLAYLISTID = 'PLTq2EE5AvIghm3MekoIX6sdyt9nDkI-R6'
const PART = 'snippet'
const maxResults = 12
const DISCOVERY_DOCS = [
  'https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest'
]
const SCOPES = 'https://www.googleapis.com/auth/youtube.readonly'
const defaultChannel = 'Acorn Phantom'

export async function getServerSideProps() {
  const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS_API}?part=${PART}&playlistId=${YOUTUBE_PLAYLISTID}&maxResults=${maxResults}&key=${process.env.YOUTUBE_API_KEY}`)
  const data = await res.json()
  return {
    props: {
      data
    }
  }
}

export default function Home({ data }) {
  const [channelName, setChannelName] = useState(null)
  const [channelId, setChannelId] = useState(null)
  const { getChannelDetail, getChannelDetailViaId, update, channelDetail, credentials } = useChannel()
  const { googleLogin, googleLogout, userId } = useAuth()

  useEffect(() => {
    AOS.init()
    AOS.refresh()
  }, [])

  const numberWithCommas = (num) => num?.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')

  const handleChannelNameSearchSubmit = (e, channel) => {
    e.preventDefault()
    getChannelDetail(channel)
    setChannelName(null)
  }

  const handleChannelIdSearchSubmit = (e, channel) => {
    e.preventDefault()
    getChannelDetailViaId(channel)
    setChannelId(null)
  }

  const handleUpdate = () => {
    update()
  }
  return (
    <div className="p-0 py-8">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Button className="text-md p-4 m-4 rounded-md text-white bg-gray-600 ring-gray-400" onClick={handleUpdate}>
        update "broken btn"
      </Button>
      {/* Authenticate */}
      <div>
        {
        !userId ? (
          <button
            type="submit"
            className="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 h-28 items-center"
            onClick={googleLogin}
          >
            <span className="absolute left-0 inset-y-0 flex items-center pl-3">
              <LockClosedIcon className="h-5 w-5 text-black-500 group-hover:text-black-400" aria-hidden="true" />
            </span>
            <span className="text-2xl">
              Authenticate
            </span>
          </button>
        ) : (
          <button
            type="submit"
            className="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 h-28 items-center"
            onClick={googleLogout}
          >
            <span className="absolute left-0 inset-y-0 flex items-center pl-3">
              <LockClosedIcon className="h-5 w-5 text-black-500 group-hover:text-black-400" aria-hidden="true" />
            </span>
            <span className="text-2xl">
              Logout
            </span>
          </button>
        )
      }
      </div>

      {/* Below authentication */}
      <main className="min-h-screen px-16 py-0 flex-auto flex flex-col justify-center items-center mt-12">

        {/* channel name input field */}
        <div className="w-1/2 flex justify-center">
          <form id="channel-form" onSubmit={(e) => handleChannelNameSearchSubmit(e, channelName)}>
            <div className="input-field col s6 flex justify-center">
              <input
                type="text"
                placeholder="Enter Channel Name"
                id="channel-input"
                className="outline-none focus:border-b-2 m-8 h-28 w-1/2 text-3xl"
                value={channelName || ''}
                onChange={(e) => {
                  e.preventDefault()
                  setChannelName(e.target.value)
                }}
              />

              <Button
                type="button"
                className="outline border rounded p-4 hover:cursor-pointer"
                onClick={(e) => {
                  e.preventDefault()
                  handleChannelNameSearchSubmit(e, channelName)
                }}
              >
                Search
              </Button>
            </div>
          </form>
        </div>

        <div>
          <p className="text-8xl">or</p>
        </div>

        {/* channel ID input field */}
        <div className="w-1/2 flex justify-center">
          <form id="channel-form" onSubmit={(e) => handleChannelIdSearchSubmit(e, channelId)}>
            <div className="input-field col s6 flex justify-center">
              <input
                type="text"
                placeholder="Enter Channel ID"
                id="channel-input"
                className="outline-none focus:border-b-2 m-8 h-28 w-1/2 text-3xl"
                value={channelId || ''}
                onChange={(e) => {
                  e.preventDefault()
                  setChannelId(e.target.value)
                }}
              />

              <Button
                type="button"
                className="outline border rounded p-4 hover:cursor-pointer"
                onClick={(e) => {
                  e.preventDefault()
                  handleChannelIdSearchSubmit(e, channelId)
                }}
              >
                Search
              </Button>
            </div>
          </form>
        </div>

        {channelDetail && (
        <div className="">

          <div>{channelDetail?.snippet?.title}</div>
          <div>{channelDetail?.snippet?.description}</div>
          <div>
            subscriber count: {numberWithCommas(channelDetail?.statistics?.subscriberCount)}
          </div>
          <div>
            view count: {numberWithCommas(channelDetail?.statistics?.viewCount)}
          </div>
        </div>
        )}

        <h1 className="text-3xl font-bold m-3 p-3 mt-48 hover:bg-violet-200 hover:rounded">
          My playlist
        </h1>

        <ul
          className="flex items-center justify-center flex-wrap w-screen"
          data-aos="fade-up"
          data-aos-anchor-placement="center-center"
        >
          {data?.items?.map((item) => {
            const { id, snippet = {} } = item
            const { title, thumbnails = {}, resourceId } = snippet
            const { large = {}, medium = {}, small = {} } = thumbnails

            return (
              <li
                key={id}
                className="w"
                data-aos="fade-up"
                data-aos-anchor-placement="bottom-bottom"
              >
                <ReactPlayer
                  url={`https://www.youtube.com/watch?v=${resourceId.videoId}`}
                  className="react-player m-2"
                  width={small.width / 3}
                  height={small.height}
                />
              </li>
            )
          })}
        </ul>
      </main>

      <footer className="flex flex-1 px-8 py-0 border-t border-solid border-stale-100 justify-center items-center">

        <a
          href="https://cavemankt.github.io"
          target="_blank"
          rel="noopener noreferrer"
          className="flex justify-center items-center grow h-60"
        >
          <span className="h-24 ml-2">
            <p className="inline">Created by{' '}</p>

            <Image src="/phantom_1.png" alt="acorn_phantom Logo" width={72} height={72} />
            <p className="inline">Acorn Phantom</p>
          </span>
        </a>
      </footer>
    </div>
  )
}
